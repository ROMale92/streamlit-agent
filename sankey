import streamlit as st
import pandas as pd
import plotly.graph_objects as go
from io import BytesIO

st.set_page_config(page_title="Analisi Linee Terapia - Sankey", layout="wide")
st.title("Sankey da dispensazioni singole")

uploaded_file = st.file_uploader("Carica il file Excel con le dispensazioni", type=["xlsx"])

if uploaded_file:
    df = pd.read_excel(uploaded_file)
    st.success("File caricato!")

    col1, col2, col3 = st.columns(3)
    with col1:
        col_id = st.selectbox("Colonna identificativo paziente", df.columns)
    with col2:
        col_atc = st.selectbox("Colonna categoria terapeutica (es. ATC)", df.columns)
    with col3:
        col_data = st.selectbox("Colonna data dispensazione", df.columns)

    col4, col5 = st.columns(2)
    with col4:
        data_indice = pd.to_datetime(st.date_input("Data indice (per selezionare naÃ¯ve)", value=pd.to_datetime("2024-01-01")))
    with col5:
        data_cutoff = pd.to_datetime(st.date_input("Cut-off follow-up (per stato finale)", value=pd.to_datetime("2024-06-30")))

    if st.button("Avvia analisi"):
        # Filtro date
        df[col_data] = pd.to_datetime(df[col_data])
        df = df[(df[col_data] >= data_indice) & (df[col_data] <= data_cutoff)].copy()

        # Ordinamento per paziente e data
        df.sort_values(by=[col_id, col_data], inplace=True)

        # Assegnazione linee terapeutiche
        df['Linea'] = 1
        for i in range(1, len(df)):
            if df.iloc[i][col_id] == df.iloc[i - 1][col_id]:
                if df.iloc[i][col_atc] != df.iloc[i - 1][col_atc]:
                    df.loc[df.index[i], 'Linea'] = df.loc[df.index[i - 1], 'Linea'] + 1
                else:
                    df.loc[df.index[i], 'Linea'] = df.loc[df.index[i - 1], 'Linea']

        # Dataset per sankey
        df['label'] = df[col_atc] + ' (Linea ' + df['Linea'].astype(str) + ')'
        df_grouped = df.groupby([col_id, 'label']).size().reset_index(name='Count')
        df_grouped['Step'] = df_grouped.groupby(col_id).cumcount()

        transizioni = df_grouped.pivot(index=col_id, columns='Step', values='label')
        sankey_data = transizioni.value_counts().reset_index(name='Count')

        links = []
        all_labels = pd.unique(sankey_data.drop(columns='Count').values.ravel()).tolist()
        label_to_index = {label: i for i, label in enumerate(all_labels)}

        for _, row in sankey_data.iterrows():
            for i in range(len(row) - 2):
                src = row[i]
                tgt = row[i + 1]
                if pd.isna(tgt):
                    tgt = "In trattamento"
                    if tgt not in label_to_index:
                        label_to_index[tgt] = len(label_to_index)
                        all_labels.append(tgt)
                links.append({
                    'source': label_to_index[src],
                    'target': label_to_index[tgt],
                    'value': row['Count']
                })

        sankey_df = pd.DataFrame(links).groupby(['source', 'target']).sum().reset_index()

        # Sankey plot
        fig = go.Figure(data=[go.Sankey(
            arrangement="snap",
            node=dict(
                pad=15,
                thickness=20,
                line=dict(color="black", width=0.5),
                label=all_labels,
                color=["#4c78a8"] * len(all_labels)
            ),
            link=dict(
                source=sankey_df['source'],
                target=sankey_df['target'],
                value=sankey_df['value']
            ))])

        st.plotly_chart(fig, use_container_width=True)

        # Download dati excel
        excel_output = BytesIO()
        with pd.ExcelWriter(excel_output, engine='openpyxl') as writer:
            df.to_excel(writer, index=False, sheet_name="Dispensazioni+Linee")
            sankey_df.to_excel(writer, index=False, sheet_name="Dati Sankey")
        st.download_button("Scarica dati Sankey", data=excel_output.getvalue(), file_name="sankey_output.xlsx")
